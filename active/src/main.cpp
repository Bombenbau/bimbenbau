#include <Arduino.h>
#include <WiFi.h>
#include <WebServer.h>
#include <ESP32Servo.h>

const char* ssid = "bombenbaukasten";
const char* password = "legalize nuclear bombs";

WebServer server(80);

// My plan is to build a solar tracker using 2 servo motors and 6 photoresistors, 2 for each axis. I want to compare the values of the photoresistors and move the servos accordingly.
// In order to achieve good / accurate results, the servos are allowed to move slowly
// The servos are controlled by a PWM signal, which is generated by the ESP32
// The servo's maximum angle is 180 degress

#define SERVO_MIN_ANGLE 0
#define SERVO_MAX_ANGLE 180

#define SENSOR_AXIS_X1 36
#define SENSOR_AXIS_X2 39

#define SENSOR_AXIS_Y1 34
#define SENSOR_AXIS_Y2 35

#define SERVO_AXIS_X 25
#define SERVO_AXIS_Y 26

void handleRequest (String path, void (*handler)()) {
  server.on(path, [handler]() { // Capture the handler variable
    // server.send(200, "", "");
    handler();
  });
}

Servo servoX;
Servo servoY;

void setup () {
  WiFi.mode(WIFI_AP);
  WiFi.softAP(ssid, password);

  server.begin();

  servoX.attach(SERVO_AXIS_X);
  servoY.attach(SERVO_AXIS_Y);
}

int servoXAngle = 0;
int servoYAngle = 0;

void loop () {
  server.handleClient();
  
  // Read the values of the photoresistors
  int sensorX1Value = analogRead(SENSOR_AXIS_X1);
  int sensorX2Value = analogRead(SENSOR_AXIS_X2);
  
  int sensorY1Value = analogRead(SENSOR_AXIS_Y1);
  int sensorY2Value = analogRead(SENSOR_AXIS_Y2);

  // Calculate the average value of the photoresistors
  int sensorXValue = (sensorX1Value + sensorX2Value) / 2;
  int sensorYValue = (sensorY1Value + sensorY2Value) / 2;

  // Calculate the difference between the photoresistors
  int sensorXDiff = sensorX1Value - sensorX2Value;
  int sensorYDiff = sensorY1Value - sensorY2Value;

  // Calculate the servo angles
  servoXAngle = map(sensorXDiff, -1023, 1023, SERVO_MIN_ANGLE, SERVO_MAX_ANGLE);
  servoYAngle = map(sensorYDiff, -1023, 1023, SERVO_MIN_ANGLE, SERVO_MAX_ANGLE);

  // Move the servos
  servoX.write(servoXAngle);
  servoY.write(servoYAngle);

  delay(100);
}